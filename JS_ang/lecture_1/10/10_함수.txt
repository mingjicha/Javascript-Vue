서비스를 만들다 보면 비슷한 동작들이 생기기 마련
팝업을 띄운다던지 결제를 한다던지
이런 동작들을 자주 사용하거나 여러곳에서 사용하면 하나로 만들어서 재활용 하는 게 좋음
중복되는 코드도 줄어들고 유지보수도 편해지니까
⭕그래서 함수를 사용함!!!
💡함수의 목적 중복을 줄이기

브라우저가 가지고 있는 내장 함수 ex) console, alert, confirm

✅함수 작성.
function sayHello(name) {
  console.log(`Hello, ${name}`);
}
-> function : 함수
-> sayHello : 함수명(자유롭게 작성)
-> (name) : 매개변수=인수, 없을 수도 있고 한 개일 수도 있고 두 개 이상일 수도 있음(쉼표로 구분)
-> {} : 함수의 실행 코드

=> 이 함수는 함수명 뒤에 괄호를 붙여서 호출 할 수 있음
  매개변수가 필요하다면 괄호 안에 넣어줌
  sayHello('Mike');

💡함수 Tip
1. 함수는 한 번에 한 작업만 하는 것이 좋음 
  하나의 함수가 여러작업을 진행 하면 함수를 더 잘게 나눠서 사용하는 것이 좋음
2. 함수명도 읽기 쉽고 어떤 동작인지 알 수 있게 네이밍 해야 함
ex)
  showError // 에러를 보여줌
  getName // 이름을 얻어옴
  createUserData // 유저데이터 생성
  checkLogin // 로그인 여부 체크