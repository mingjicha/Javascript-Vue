배열 : 순서가 있는 리스트
한 명 한 명 변수를 일일이 만들면 힘들기도 하고 함수명도 기억해야 하고 불편함

let students = ['철수', '영희', ... '영수'];
배열은 대괄호([])로 묶어주고 쉼표(,)로 구분 

✅배열을 탐색할 때는 고유 번호를 사용하는데 이를 Index라고 하면 0부터 시작함
console.log(students[0]); // 철수
console.log(students[1]); // 영희
console.log(students[29]); // 영수

✅수정도 가능
students[0] = '민정';
console.log(students[0]) = '민정';
-> 철수에서 민정으로 바뀜

💡배열의 특징
1. 배열은 문자 뿐만 아니라 숫자, 객체, 함수 등도 포함할 수 있음
let arr = [
  '민수',
  3,
  false,
  {
    name: 'Mike',
    age: 30,
  }
  function() {
    console.log('TEST');
  }
];
2. length : 배열의 길이
students.length // 30
-> 그 배열이 갖고 있는 요소의 개수를 반환 함

3. push() : 배열 끝에 추가
let days = ['월', '화', '수'];
days.push('목');
console.log(days) // ['월', '화', '수', '목']
days.push('목', '금');
console.log(days) // ['월', '화', '수', '목', '금']

4. pop() : 배열 끝 요소 제거
let days = ['월', '화', '수'];
days.pop('수');
console.log(days) // ['월', '화']

5. unshift() : 배열 앞에 추가
days.unshift('일');
console.log(days) // ['일', '월', '화', '수']
days.unshift('토', '일');
console.log(days) // ['토', '일', '월', '화', '수']

6. shift() : 배열 앞에 제거
days.shift();
console.log(days) // ['화', '수']

7. 반복문 : for
let days = ['월', '화', '수'];
for(let index = 0; index < days.length; index++) {
  console.log(days[index]);
}
-> index는 0부터 시작, index가 배열의 길이 즉, 3보다 작으면 코드를 실행, index를 1씩 증가시켜 줌

8. 반복문 : for ... of
let days = ['월', '화', '수'];
for(let day of days) {
  console.log(day);
}
// for문 보다는 간단하지만 index를 못얻는다는 단점이 있음
⛔객체를 순회하는 for ... in 과 헷갈리지 않도록 주의


